# type: section
# name: Resource
# description:
resource:
  # type: section
  # name: Limits
  # description:
  limits:
    # type: int
    # name: CPU Limit (Cores)
    # upgrade_from: max_cpus
    # deprecated: true
    # TODO: 此配置项与 max_millicpus 合并
    max_cpus: 1
    # type: int
    # name: CPU Limit
    # unit: Logical Milli Cores
    # range: [1, 100000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   deepflow-agent uses cgroups to limit CPU usage.
    #   1 millicpu = 1 millicore = 0.001 core.
    # upgrade_from: max_millicpus
    max_millicpus: 1000
    # type: int
    # name: Memory Limit
    # unit: MiB
    # range: [128, 100000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   deepflow-agent uses cgroups to limit memory usage.
    # upgrade_from: max_memory
    max_memory: 768
    # type: int
    # name: Remote Log Rate Limit
    # unit: Lines/Hour
    # range: [0, 10000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   deepflow-agent will send logs to deepflow-server, 0 means no limit.
    # upgrade_from: log_threshold
    log_threshold: 300
    # type: int
    # name: Log File Size
    # unit: MiB
    # range: [10, 10000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The maximum disk space allowed for deepflow-agent log files.
    # upgrade_from: log_file_size
    log_file_size: 1000
    # type: duration
    # name: Log Retention Time
    # unit:
    # range: [10d, 10000d]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The retention time for deepflow-agent log files.
    # upgrade_from: log_retention
    # TODO: 以前的单位是天，改为 duration
    log_retention: 300d
  # type: section
  # name: Alerts
  # description:
  alerts:
    # type: int
    # name: Thread Limit
    # unit:
    # range: [1, 1000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   Maximum number of threads that deepflow-agent is allowed to launch.
    # upgrade_from: thread_threshold
    thread_threshold: 500
    # type: int
    # name: Process Limit
    # unit:
    # range: [1, 100]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   Maximum number of processes that deepflow-agent is allowed to launch.
    # upgrade_from: process_threshold
    process_threshold: 10
    # type: bool
    # name: Core File Checker
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   When the host has an invalid NFS file system or a docker is running,
    #   sometime program hang when checking the core file, so the core file
    #   check provides a switch to prevent the process hang. Additional links:
    #   - https://serverfault.com/questions/367438/ls-hangs-for-a-certain-directory
    #   - https://unix.stackexchange.com/questions/495854/processes-hanging-when-trying-to-access-a-file
    # upgrade_from: static_config.check-core-file-disabled
    # TODO: 【待确认】可以废弃了？
    check_core_file_disabled: false
  # type: section
  # name: Circuit Breakers
  # description:
  circuit_breakers:
    # type: section
    # name: System Free Memory
    # description:
    sys_free_memory:
      # type: int
      # name: Threshold
      # unit: '%'
      # range: [0, 100]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The limit of the percentage of system free memory.
      #   When the free percentage is lower than 90% of this value,
      #   the agent will automatically restart.
      # upgrade_from: sys_free_memory_limit
      sys_free_memory_limit: 0
    # type: section
    # name: System Load
    # description:
    sys_load:
      # type: float
      # name: Threshold
      # unit:
      # range: [0, 10]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When the load of the Linux system divided by the number of
      #   CPU cores exceeds this value, the agent automatically enters
      #   the disabled state. It will automatically recover if it remains
      #   below 90% of this value for a continuous 5 minutes. Setting it
      #   to 0 disables this feature.
      # upgrade_from: system_load_circuit_breaker_threshold
      system_load_circuit_breaker_threshold: 1.0
      # type: float
      # name: Recover
      # unit:
      # range: [0, 10]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When the system load of the Linux system divided by the
      #   number of CPU cores is continuously below this value for 5
      #   minutes, the agent can recover from the circuit breaker
      #   disabled state, and setting it to 0 means turning off the
      #   circuit breaker feature.
      # upgrade_from: system_load_circuit_breaker_recover
      system_load_circuit_breaker_recover: 0.9
      # type: string
      # name: Metric
      # unit:
      # range: []
      # enum_options: [load1, load5, load15]
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The system load circuit breaker mechanism uses this metric,
      #   and the agent will check this metric every 10 seconds by default.
      # upgrade_from: system_load_circuit_breaker_metric
      system_load_circuit_breaker_metric: load15
    # type: section
    # name: NPB (Network Packet Broker)
    # description:
    tx_bandwidth:
      # type: int
      # name: Threshold
      # unit: Mbps
      # range: [0, 100000]
      # enum_options: []
      # modification: hot_update
      # ee_feature: true
      # description: |-
      #   When the outbound direction of the NPB interface
      #   reaches or exceeds the threshold, the distribution will be
      #   stopped, and then the distribution will be resumed if the
      #   value is lower than (max_tx_bandwidth - max_npb_bps)*90%
      #   within 5 consecutive monitoring intervals.
      #
      #   Attention: When configuring this value, it must be greater
      #   than max_npb_bps. 0 means disable this feature.
      # upgrade_from: max_tx_bandwidth
      max_tx_bandwidth: 0
      # type: duration
      # name: Monitoring Interval
      # unit:
      # range: [1s, 60s]
      # enum_options: []
      # modification: hot_update
      # ee_feature: true
      # description: |-
      #   Monitoring interval for outbound traffic rate of NPB interface.
      # upgrade_from: bandwidth_probe_interval
      # TODO: 原来的单位是 s、类型是 int，新版本要改成 duration
      bandwidth_probe_interval: 10s
  # type: section
  # name: Tunning
  # description:
  tunning:
    # type: int
    # name: CPU Affinity
    # unit:
    # range: [0, 65536]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   CPU affinity is the tendency of a process to run on a given CPU for as long as possible
    #   without being migrated to other processors. Example: `cpu-affinity: [1, 3, 5, 7, 9]`.
    # upgrade_from: static_config.cpu-affinity
    cpu_affinity: []
    # type: int
    # name: Process Scheduling Priority
    # unit:
    # range: [-20, 19]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   The smaller the value of process scheduling priority, the higher the priority of the
    #   process, and the larger the priority, the lower the priority.
    # upgrade_from: static_config.process-scheduling-priority
    process_scheduling_priority: 0
    # type: bool
    # name: Memory Trim
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Using memory trimming can effectively reduce memory usage, but there may be
    #   performance loss.
    # upgrade_from: static_config.memory-trim-disabled
    # TODO: 【待确认】可以废弃了？
    memory_trim_disabled: false

# type: section
# name: Management
# description:
management:
  # type: section
  # name: NTP
  # description:
  ntp:
    # type: bool
    # name: Synchronization Enabled
    # unit:
    # range: []
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   Whether to synchronize the clock to the deepflow-server, this behavior
    #   will not change the time of the deepflow-agent running environment.
    # upgrade_from: ntp_enabled
    # TODO: 原来是 int，需要改为 bool
    ntp_enabled: false
    # type: duration
    # name: Max Offset
    # unit:
    # range: [0, 365d]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   When the timestamp fallback exceeds this value, the agent will restart.
    # upgrade_from: static_config.ntp-max-interval
    ntp_max_interval: 300s
    # type: duration
    # name: Min Offset
    # unit:
    # range: [0, 365d]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   When the time difference exceeds this value, the timestamp will be corrected.
    # upgrade_from: static_config.ntp-min-interval
    ntp_min_interval: 10s
  # type: section
  # name: Communication
  # description:
  communication:
    # type: duration
    # name: Active Sync Interval
    # unit:
    # range: [10s, 3600s]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The interval at which deepflow-agent actively requests configuration and
    #   tag information from deepflow-server.
    # upgrade_from: sync_interval
    # TODO: 原来的单位是 s、类型是 int，新版本要改成 duration
    sync_interval: 60s
    # type: duration
    # name: Maximum Escape Time
    # unit:
    # range: [600s, 30d]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The maximum time that the agent is allowed to work normally when it
    #   cannot connect to the server. After the timeout, the agent automatically
    #   enters the disabled state.
    # upgrade_from: max_escape_seconds
    # TODO: 原来的单位是 s、类型是 int，新版本要改成 duration
    max_escape_seconds: 3600s
    # type: ip
    # name: Fixed Controller IP
    # unit:
    # range: []
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   When this value is set, deepflow-agent will use this IP to access the
    #   control plane port of deepflow-server, which is usually used when
    #   deepflow-server uses an external load balancer.
    # upgrade_from: proxy_controller_ip
    proxy_controller_ip:
    # type: int
    # name: Controller Port
    # unit:
    # range: [1, 65535]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The control plane port used by deepflow-agent to access deepflow-server.
    #   The default port within the same K8s cluster is 20035, and the default port
    #   of deepflow-agent outside the cluster is 30035.
    # upgrade_from: proxy_controller_port
    proxy_controller_port: 30035
    # type: ip
    # name: Fixed Ingester IP
    # unit:
    # range: []
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   When this value is set, deepflow-agent will use this IP to access the
    #   data plane port of deepflow-server, which is usually used when
    #   deepflow-server uses an external load balancer.
    # upgrade_from: analyzer_ip
    analyzer_ip: 
    # type: int
    # name: Ingester Port
    # unit:
    # range: [1, 65535]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The data plane port used by deepflow-agent to access deepflow-server.
    #   The default port within the same K8s cluster is 20033, and the default port
    #   of deepflow-agent outside the cluster is 30033.
    # upgrade_from: analyzer_port
    analyzer_port: 30033
    # type: int
    # name: gRPC Socket Buffer Size
    # unit: MiB
    # range: [5, 1024]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   gRPC socket buffer size.
    # upgrade_from: static_config.grpc-buffer-size
    # TODO: 【待确认】拆分为两个 RPC，第一个获取 size
    grpc_buffer_size: 5
  # type: section
  # name: Self Monitoring
  # description:
  self_monitoring:
    # type: duration
    # name: Guard Interval
    # unit:
    # range: [1s, 3600s]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   The agent will monitor:
    #   1. System free memory;
    #   2. Get the number of threads of the agent itself by reading the file information
    #      under the /proc directory;
    #   3. Size and number of log files generated by the agent.
    #   4. System load
    # upgrade_from: static_config.guard-interval
    guard_interval: 10s
    # type: section
    # name: Log
    # description:
    log:
      # type: bool
      # name: Remote Log Enabled
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When enabled, deepflow-agent will send its own logs to deepflow-server.
      # upgrade_from: rsyslog_enabled
      # TODO: 原来是 int，需要改为 bool
      rsyslog_enabled: true
      # type: string
      # name: Log Level
      # unit:
      # range: []
      # enum_options: [DEBUG, INFO, WARNING, ERROR]
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Log level of deepflow-agent.
      # upgrade_from: log_level
      log_level: INFO
    # type: section
    # name: Profile
    # description:
    profile:
      # type: bool
      # name: Profiler Enabled
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Only available for Trident (Golang version of Agent).
      # upgrade_from: static_config.profiler
      # TODO: 【待确认】only for trident
      profiler: false
    # type: section
    # name: Debug
    # description:
    debug:
      # type: int
      # name: Source Port for Debug
      # unit:
      # range: [0, 65535]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Default value 0 means use a random client port number.
      #   Only available for Trident (Golang version of Agent).
      # upgrade_from: static_config.debug-listen-port
      # TODO: 【待确认】only for trident，【待确认】可使用 unix socket，从而避免 listen port
      debug_listen_port: 0
      # type: bool
      # name: Statsd Counters for Sniffer
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Only available for Trident (Golang version of Agent).
      # upgrade_from: static_config.enable-debug-stats
      # TODO: 【待确认】only for trident
      enable_debug_stats: false
  # type: section
  # name: Standalone Mode
  # description:
  standalone_mode:
    # type: int
    # name: Data File Size
    # unit: MiB
    # range: [1, 1000000]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   When deepflow-agent runs in standalone mode, it will not be controlled by
    #   deepflow-server, and the collected data will only be written to the local file.
    #   Currently supported data types for writing are l4_flow_log and l7_flow_log. Each
    #   type of data is written to a separate file. This configuration can be used to
    #   specify the maximum size of the data file, and rotate when it exceeds this size.
    #   A maximum of two files are kept for each type of data.
    # upgrade_from: static_config.standalone-data-file-size
    # TODO: 增加了最小、最大值
    standalone_data_file_size: 200
    # type: string
    # name: Directory of Data File
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Directory where data files are written to.
    # upgrade_from: static_config.standalone-data-file-dir
    standalone_data_file_dir: /var/log/deepflow_agent/
    # type: string
    # name: Log File Path
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Note that this configuration is only used in standalone mode.
    # upgrade_from: static_config.log-file
    log_file: /var/log/deepflow_agent/deepflow_agent.log

# type: section
# name: Inputs
# description:
inputs:
  # type: section
  # name: cBPF
  # description:
  cbpf:
    # type: section
    # name: Common
    # description:
    common:
      # type: int
      # name: TAP (Traffic Access Point) Mode
      # unit:
      # range: []
      # enum_options:
      #   - 0: Local
      #   - 1: Virtual Mirror
      #   - 2: Physical Mirror
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Mirror mode is used when deepflow-agent cannot directly capture the traffic from
      #   the source. For example:
      #   - in the K8s macvlan environment, capture the Pod traffic through the Node NIC
      #   - in the Hyper-V environment, capture the VM traffic through the Hypervisor NIC
      #   - in the ESXi environment, capture traffic through VDS/VSS local SPAN
      #   - in the DPDK environment, capture traffic through DPDK ring buffer
      #   Use Physical Mirror mode when deepflow-agent captures traffic through physical
      #   switch mirroring.
      #
      #   <mark>`Physical Mirror` is only supported in the Enterprise Edition.</mark>
      # upgrade_from: tap_mode
      tap_mode: 0
    # type: section
    # name: AF_PACKET
    # description:
    af_packet:
      # type: string
      # name: NIC Name Regular Expression
      # unit:
      # range: [0, 65535]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Regular expression of NIC name for collecting traffic.
      #
      #   Explanation of the default configuration:
      #   ```
      #   Localhost:     lo
      #   Common NIC:    eth.*|en[osipx].*
      #   QEMU VM NIC:   tap.*
      #   Flannel:       veth.*
      #   Calico:        cali.*
      #   Cilium         lxc.*
      #   Kube-OVN       [0-9a-f]+_h$
      #   ```
      # upgrade_from: tap_interface_regex
      # TODO: 字符串长度为 0 时的行为确认下
      tap_interface_regex: ^(tap.*|cali.*|veth.*|eth.*|en[osipx].*|lxc.*|lo|[0-9a-f]+_h)$
      # type: dict
      # name: Bonding Sub-interfaces
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Packets of interfaces in the same group can be aggregated together,
      #   Only effective when tap_mode is 0.
      # upgrade_from: static_config.tap-interface-bond-groups
      # TODO: dict 类型的配置注意升级问题
      tap_interface_bond_groups:
      - tap_interfaces: []
      # type: string
      # name: Extra Network Namespace
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: true
      # description: |-
      #   Traffic will be captured in regex matched namespaces besides the default
      #   namespace. NICs captured in extra namespaces are also filtered with
      #   `tap_interface_regex`.
      #
      #   Default value "" means no extra network namespace (default namespace only).
      # upgrade_from: extra_netns_regex
      extra_netns_regex:
      # type: string
      # name: Extra Traffic Filter
      # unit:
      # range: [0, 512]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   If not configured, all traffic will be collected. Please
      #   refer to BPF syntax: https://biot.com/capstats/bpf.html
      # upgrade_from: capture_bpf
      capture_bpf:
      # type: string
      # name: TAP Interfaces
      # upgrade_from: static_config.src-interfaces
      # deprecated: true
      # TODO: 【待确定】deprecated
      src_interfaces: []
      # type: int
      # name: PCP of Mirror Traffic
      # unit:
      # range: [0, 8]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Calculate TAP value from vlan tag only if vlan pcp matches this value.
      # upgrade_from: static_config.mirror-traffic-pcp
      mirror_traffic_pcp: 0
      # type: bool
      # name: BPF Filter Enabled
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   It is found that there may be bugs in BPF traffic filtering under some
      #   versions of Linux Kernel. After this configuration is enabled, deepflow-agent
      #   will not use the filtering capabilities of BPF, and will filter by itself after
      #   capturing full traffic. Note that this may significantly increase the resource
      #   overhead of deepflow-agent.
      # upgrade_from: static_config.bpf-disabled
      bpf_disabled: false
    # type: section
    # name: Special Network
    # description:
    special_network:
      # type: section
      # name: DPDK
      # description:
      dpdk:
        # type: bool
        # name: Enabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   The DPDK RecvEngine is only started when this configuration item is turned on.
        #   Note that you also need to set tap_mode to 1. Please refer to
        #   https://dpdk-docs.readthedocs.io/en/latest/prog_guide/multi_proc_support.html
        # upgrade_from: static_config.dpdk-enabled
        dpdk_enabled: false
        # type: string
        # name: CPU Core List
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   Map lcore set to physical cpu set.
        #   Format: `<lcores[@cpus]>[<,lcores[@cpus]>...]`
        #
        #   Examples:
        #   - 1,2,3,4
        #   - 1-4
        #   - (1,2)(3-10)
        #   - 1@3,2@4
        #
        #   lcores and cpus list are grouped by `(` and `)`. Within the group, `-` is used
        #   for range separator, `,` is used for single number separator. `()` can be
        #   omitted for single element group, `@` can be omitted if cpus and lcores have
        #   the same value.
        # upgrade_from: static_config.dpdk_core_list
        dpdk_core_list: ""
      # type: section
      # name: LibPCAP
      # description:
      libpcap:
        # type: bool
        # name: Enabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   Supports running on Windows and Linux, Low performance when using multiple interfaces.
        #   Default to true in Windows, false in Linux.
        # upgrade_from: static_config.libpcap-enabled
        libpcap_enabled: false
      # type: section
      # name: vHost User
      # description:
      vhost_user:
        # type: bool
        # name: Enabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   Supports running on Linux with mirror mode.
        # upgrade_from: static_config.vhost-socket-path
        vhost_socket_path: ""
      # type: section
      # name: Switch
      # description:
      switch:
        # type: int
        # name: sFlow Server Ports
        # unit:
        # range: [1, 65535]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   This feature is only supported by the Enterprise Edition of Trident.
        #   In general, sFlow uses port 6343. Default value [] means that no sFlow
        #   data will be collected.
        # upgrade_from: static_config.xflow-collector.sflow-ports
        sflow_ports: []
        # type: int
        # name: NetFlow Server Ports
        # unit:
        # range: [1, 65535]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   This feature is only supported by the Enterprise Edition of Trident.
        #   Additionally, only NetFlow v5 is currently supported. In general, NetFlow
        #   uses port 2055. Default value [] means that no NetFlow data will be collected.
        # upgrade_from: static_config.xflow-collector.netflow-ports
        netflow_ports: []
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: Local Dispatcher Count
      # unit:
      # range: [1, 64]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The configuration takes effect when tap_mode is 0 and extra_netns_regex is null,
      #   PACKET_FANOUT is to enable load balancing and parallel processing, which can improve
      #   the performance and scalability of network applications. When the `local-dispatcher-count`
      #   is greater than 1, multiple dispatcher threads will be launched, consuming more CPU and
      #   memory. Increasing the `local-dispatcher-count` helps to reduce the operating system's
      #   software interrupts on multi-core CPU servers.
      # upgrade_from: static_config.local-dispatcher-count
      # TODO: 【待确定】适用于哪些 recv engine。另外以前没有最大值，现在加上了 64 的限制
      local_dispatcher_count: 1
      # type: int
      # name: Packet Fanout Mode
      # unit:
      # range: []
      # enum_options:
      #   - 0: PACKET_FANOUT_HASH
      #   - 1: PACKET_FANOUT_LB
      #   - 2: PACKET_FANOUT_CPU
      #   - 3: PACKET_FANOUT_ROLLOVER
      #   - 4: PACKET_FANOUT_RND
      #   - 5: PACKET_FANOUT_QM
      #   - 6: PACKET_FANOUT_CBPF
      #   - 7: PACKET_FANOUT_EBPF
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The configuration is a parameter used with the PACKET_FANOUT feature in the Linux
      #   kernel to specify the desired packet distribution algorithm. Refer to:
      #   - https://github.com/torvalds/linux/blob/afcd48134c58d6af45fb3fdb648f1260b20f2326/include/uapi/linux/if_packet.h#L71
      #   - https://www.stackpath.com/blog/bpf-hook-points-part-1/
      # upgrade_from: static_config.packet-fanout-mode
      # TODO: 【待确定】适用于哪些 recv engine
      packet_fanout_mode: 0
      # type: bool
      # name: Dispatcher Queues
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The configuration takes effect when tap_mode is 0 or 2,
      #   dispatcher-queue is always true when tap_mode is 2
      # upgrade_from: static_config.dispatcher-queue
      # TODO: 【待确定】适用于哪些 recv engine
      dispatcher_queue: false
      # type: bool
      # name: AF_PACKET Blocks Config Enabled
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When tap_mode != 2, you need to explicitly turn on this switch to
      #   configure 'afpacket-blocks'.
      # upgrade_from: static_config.afpacket-blocks-enabled
      afpacket_blocks_enabled: false
      # type: int
      # name: AF_PACKET Blocks
      # unit:
      # range: [8, 1000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   deepflow-agent will automatically calculate the number of blocks
      #   used by AF_PACKET according to max_memory, which can also be specified
      #   using this configuration item. The size of each block is fixed at 1MB.
      # upgrade_from: static_config.afpacket-blocks
      # TODO: 以前的最大值不限制，现在增加了 1000000 的限制
      afpacket_blocks: 128
      # type: int
      # name: Maximum Packet Capture Length
      # unit: byte
      # range: [128, 65535]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   DPDK environment does not support this configuration.
      # upgrade_from: capture_packet_size
      # TODO: 待确认适用于哪些 recv engine
      capture_packet_size: 65535
      # type: int
      # name: Traffic Capture Socket
      # unit:
      # range: []
      # enum_options:
      #   - 0: Adaptive
      #   - 2: AF_PACKET V2
      #   - 3: AF_PACKET V3
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Traffic capture API in Linux environment.
      # upgrade_from: capture_socket_type
      capture_socket_type: 0
      # type: int
      # name: Buffer Block Size for Raw Packet
      # unit:
      # range: [65536, 16000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Larger value will reduce memory allocation for raw packet, but will also
      #   delay memory free.
      # upgrade_from: static_config.analyzer-raw-packet-block-size
      # TODO: 以前没有限定最大值，此次加了最大值
      analyzer_raw_packet_block_size: 65536
      # type: int
      # name: Queue Size for Analyzer Mode
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   The length of the following queues (only for tap_mode = 2):
      #   - 0.1-bytes-to-parse
      #   - 0.2-packet-to-flowgenerator
      #   - 0.3-packet-to-pipeline
      # upgrade_from: static_config.analyzer-queue-size
      analyzer_queue_size: 131072
      # type: int
      # name: Packet Capture Rate Limit
      # unit: Kpps
      # range: [1, 1000000]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Maximum packet rate allowed for collection.
      # upgrade_from: max_collect_pps
      # TODO: 确认一下适用于哪些 recv engine。另外默认值偏小了，默认设置为 0 表示不限速？
      max_collect_pps: 200
    # type: section
    # name: Preprocess
    # description:
    preprocess:
      # type: int
      # name: Decapsulation Tunnel Protocols
      # unit:
      # range: []
      # enum_options:
      #   - 1: VXLAN
      #   - 2: IPIP
      #   - 3: GRE
      #   - 4: Geneve
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Decapsulation tunnel protocols.
      # upgrade_from: decap_type
      decap_type: [1, 2]
      # type: string
      # name: Trim Tunnel Header
      # unit:
      # range: []
      # enum_options: [ERSPAN, VXLAN, TEB]
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Whether to remove the tunnel header in mirrored traffic.
      # upgrade_from: static_config.trim-tunnel-types
      # TODO: 用于哪些 tap_mode?
      trim_tunnel_types: []
      # type: int
      # name: Default Network Type for Mirror Traffic
      # unit:
      # range: []
      # enum_options:
      #   - 3: Cloud Network
      #   - _DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   deepflow-agent will mark the TAP (Traffic Access Point) location
      #   according to the outer vlan tag in the mirrored traffic of the physical
      #   switch. When the vlan tag has no corresponding TAP value, or the vlan
      #   pcp does not match the 'mirror-traffic-pcp', it will assign the TAP value.
      #   This configuration item. Default value 3 means Cloud Network.
      # upgrade_from: static_config.default-tap-type
      # TODO: 候选项特殊，需要改写
      default_tap_type: 3
      # type: bool
      # name: Mirror Traffic Dedup
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Whether to enable mirror traffic deduplication when tap_mode = 2.
      # upgrade_from: static_config.analyzer-dedup-disabled
      analyzer_dedup_disabled: false
      # type: bool
      # name: NFVGW Traffic
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Whether it is the mirrored traffic of NFVGW (cloud gateway).
      # upgrade_from: static_config.cloud-gateway-traffic
      cloud_gateway_traffic: false
  # type: section
  # name: eBPF
  # description:
  ebpf:
    # type: bool
    # name: Enabled
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Whether to enable eBPF features.
    # upgrade_from: static_config.ebpf.disabled
    disabled: false
    # type: section
    # name: Socket Event
    # description:
    socket_event:
      # type: section
      # name: Uprobe
      # description:
      uprobe:
        # type: section
        # name: Regex for Process Name
        # description: |-
        #   The name of the process where each feature of ebpf uprobe takes effect,
        #   which is configured using regular expressions
        uprobe_process_name_regexs:
          # type: string
          # name: Golang-specific Symbol Table Parsing
          # unit:
          # range: []
          # enum_options: []
          # modification: agent_restart
          # ee_feature: false
          # description: |-
          #   Process name to enable Golang-specific symbol table parsing.
          #   Default: "", which means that this feature is not enabled for any process.
          #
          #   This feature acts on Golang processes that have trimmed the standard symbol
          #   table. When this feature is enabled, for processes with Golang
          #   version >= 1.13 and < 1.18, when the standard symbol table is missing, the
          #   Golang-specific symbol table will be parsed to complete uprobe data collection.
          #   Note that enabling this feature may cause the eBPF initialization process to
          #   take ten minutes. The `golang-symbol` configuration item depends on the `golang`
          #   configuration item, the `golang-symbol` is a subset of the `golang` configuration item.
          #
          #   Example:
          #   - Ensure that the regular expression matching for the 'golang' configuration
          #     item is enabled, for example: `golang: .*`
          #   - You've encountered the following warning log:
          #     ```
          #     [eBPF] WARNING: func resolve_bin_file() [user/go_tracer.c:558] Go process pid 1946
          #     [path: /proc/1946/root/usr/local/bin/kube-controller-manager] (version: go1.16). Not find any symbols!
          #     ```
          #     Suppose there is a Golang process with a process ID of '1946.'
          #   - To initially confirm whether the executable file for this process has a symbol table:
          #     - Retrieve the executable file's path using the process ID:
          #       ```
          #       # ls -al /proc/1946/exe
          #       /proc/1946/exe -> /usr/local/bin/kube-controller-manager
          #       ```
          #     - Check if there is a symbol table:
          #       ```
          #       # nm /proc/1946/root/usr/local/bin/kube-controller-manager
          #       nm: /proc/1946/root/usr/local/bin/kube-controller-manager: no symbols
          #       ```
          #   - If "no symbols" is encountered, it indicates the absence of a symbol table. In such a
          #     scenario, we need to configure the "golang-symbol" setting. To configure this:
          #     ```
          #     golang-symbol: ^(kube-controller-.*)$
          #     ```
          #     Explanation: Configure a regular expression for the trailing part 'kube-controller-manager'
          #     following the executable file path of the process. It can also be a regular expression for
          #     the process name (obtained through `/proc/<PID>/status` to extract the process `Name`).
          #   - During the agent startup process, you will observe the following log information: (The entry
          #     address for the function `crypto/tls.(*Conn).Write` has already been resolved, i.e., entry:0x25fca0).
          #     ```
          #     [eBPF] INFO Uprobe [/proc/1946/root/usr/local/bin/kube-controller-manager] pid:1946 go1.16.0
          #     entry:0x25fca0 size:1952 symname:crypto/tls.(*Conn).Write probe_func:uprobe_go_tls_write_enter rets_count:0
          #     ```
          #     The logs indicate that the Golang program has been successfully hooked.
          # upgrade_from: static_config.ebpf.uprobe-process-name-regexs.golang-symbol
          golang_symbol: ""
          # type: string
          # name: Golang Process Enable Uprobe
          # unit:
          # range: []
          # enum_options: []
          # modification: agent_restart
          # ee_feature: false
          # description: |-
          #   The name of the Golang process that enables HTTP2/HTTPS protocol data collection
          #   and auto-tracing. go auto-tracing also dependent go-tracing-timeout.
          #   The default value is "", which means it is disabled for all Golang processes.
          # upgrade_from: static_config.ebpf.uprobe-process-name-regexs.golang
          golang: ""
          # type: string
          # name: OpenSSL Process Enable Uprobe
          # unit:
          # range: []
          # enum_options: []
          # modification: agent_restart
          # ee_feature: false
          # description: |-
          #   The name of the process that uses the openssl library to enable HTTPS protocol data collection.
          #   Default value "" means that it is disabled for all processes that use the openssl library.
          #   One can use the following method to determine whether an application process can use
          #   `Uprobe hook openssl library` to access encrypted data:
          #
          #   Use the command `cat /proc/<PID>/maps | grep "libssl.so"` to check if it contains
          #   information about openssl. If it does, it indicates that this process is using the
          #   openssl library. After configuring the openssl options, deepflow-agent will retrieve process
          #   information that matches the regular expression, hooking the corresponding encryption/decryption
          #   interfaces of the openssl library.
          #
          #   In the logs, you will encounter a message similar to the following:
          #   ```
          #   [eBPF] INFO openssl uprobe, pid:1005, path:/proc/1005/root/usr/lib64/libssl.so.1.0.2k
          #   ```
          # upgrade_from: static_config.ebpf.uprobe-process-name-regexs.openssl
          openssl: ""
        # type: duration
        # name: eBPF Golang Tracing Timeout
        # unit:
        # range: [0, 1d]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   The expected maximum time interval between the server receiving the request and returning
        #   the response, If the value is 0, this feature is disabled. Tracing only considers the
        #   thread number.
        # upgrade_from: static_config.ebpf.go-tracing-timeout
        # TODO: 类型从数字改为了 duration
        go_tracing_timeout: 120s
      # type: section
      # name: Kprobe
      # description:
      kprobe:
        # type: dict
        # name: Kprobe Blacklist
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   TCP&UDP Port Blacklist, Priority higher than kprobe-whitelist.
        # upgrade_from: static_config.ebpf.kprobe-blacklist
        kprobe_blacklist:
          port_list:
        # type: dict
        # name: Kprobe Whitelist
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   TCP&UDP Port Whitelist, Priority lower than kprobe-blacklist.
        # upgrade_from: static_config.ebpf.kprobe-whitelist
        kprobe_whitelist:
          port_list:
    # type: section
    # name: IO Event
    # description:
    io_event:
      # type: int
      # name: Collect Mode
      # unit:
      # range: []
      # enum_options:
      #   - 0: Disabled
      #   - 1: Request Life Cycle
      #   - 2: All
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Collection modes:
      #   - 0: Indicates that no IO events are collected.
      #   - 1: Indicates that only IO events within the request life cycle are collected.
      #   - 2: Indicates that all IO events are collected.
      # upgrade_from: static_config.ebpf.io-event-collect-mode
      io_event_collect_mode: 1
      # type: duration
      # name: Minimal Duration
      # unit:
      # range: [1ns, 1s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Only collect IO events with delay exceeding this threshold.
      # upgrade_from: static_config.ebpf.io-event-minimal-duration
      io_event_minimal_duration: 1ms
    # type: section
    # name: Profile
    # description:
    profile:
      # type: duration
      # name: Java Symbol Update Defer
      # unit:
      # range: [5s, 3600s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When deepflow-agent finds that an unresolved function name appears in the function call
      #   stack of a Java process, it will trigger the regeneration of the symbol file of the
      #   process. Because Java utilizes the Just-In-Time (JIT) compilation mechanism, to obtain
      #   more symbols for Java processes, the regeneration will be deferred for a period of time.
      # upgrade_from: static_config.ebpf.java-symbol-file-refresh-defer-interval
      java_symbol_file_refresh_defer_interval: 600s
      # type: int
      # name: Maximum Java Symbol File Size
      # unit: MiB
      # range: [2, 100]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   All Java symbol files are stored in the '/tmp' directory mounted by the deepflow-agent.
      #   To prevent excessive occupation of host node space due to large Java symbol files, a
      #   maximum size limit is set for each generated Java symbol file.
      # upgrade_from: static_config.ebpf.java-symbol-file-max-space-limit
      java_symbol_file_max_space_limit: 10
      # type: section
      # name: eBPF On-CPU Profile
      # description:
      on_cpu_profile:
        # type: bool
        # name: Disabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   eBPF On-CPU profile switch.
        # upgrade_from: static_config.ebpf.on-cpu-profile.disabled
        disabled: false
        # type: int
        # name: Sampling Frequency
        # unit:
        # range: [1, 1000]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   eBPF On-CPU profile sampling frequency.
        # upgrade_from: static_config.ebpf.on-cpu-profile.frequency
        frequency: 99
        # type: bool
        # name: Aggregate by CPU
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Whether to obtain the value of CPUID and decide whether to participate in aggregation.
        #   - Set to 1: Obtain the value of CPUID and will be included in the aggregation of stack
        #     trace data.
        #   - Set to 0: It will not be included in the aggregation. Any other value is considered
        #     invalid, the CPU value for stack trace data reporting is a special value
        #     `CPU_INVALID: 0xfff` used to indicate that it is an invalid value.
        # upgrade_from: static_config.ebpf.on-cpu-profile.cpu
        # TODO: 从数值改为了 bool
        cpu: false
        # type: string
        # name: Process Regex
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   The process names which enable eBPF On-CPU profiling.
        # upgrade_from: static_config.ebpf.on-cpu-profile.regex
        regex: ^deepflow-.*
      # type: section
      # name: eBPF Off-CPU Profile
      # description:
      off_cpu_profile:
        # type: bool
        # name: Disabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   eBPF Off-CPU profile switch.
        # upgrade_from: static_config.ebpf.off-cpu-profile.disabled
        disabled: false
        # type: string
        # name: Process Regex
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   The process names which enable eBPF Off-CPU profiling.
        # upgrade_from: static_config.ebpf.off-cpu-profile.regex
        regex: ^deepflow-.*
        # type: bool
        # name: Aggregate by CPU
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   Whether to obtain the value of CPUID and decide whether to participate in aggregation.
        #   - Set to 1: Obtain the value of CPUID and will be included in the aggregation of stack
        #     trace data.
        #   - Set to 0: It will not be included in the aggregation. Any other value is considered
        #     invalid, the CPU value for stack trace data reporting is a special value
        #     `CPU_INVALID: 0xfff` used to indicate that it is an invalid value.
        # upgrade_from: static_config.ebpf.off-cpu-profile.cpu
        # TODO: 从数值改为了 bool
        cpu: false
        # type: duration
        # name: Minimum Blocking Event Time
        # unit:
        # range: [0, 1h]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   If set to 0, there will be no minimum value limitation. Scheduler events are still
        #   high-frequency events, as their rate may exceed 1 million events per second, so
        #   caution should still be exercised.
        #
        #   If overhead remains an issue, you can configure the 'minblock' tunable parameter here.
        #   If the off-CPU time is less than the value configured in this item, the data will be
        #   discarded. If your goal is to trace longer blocking events, increasing this parameter
        #   can filter out shorter blocking events, further reducing overhead. Additionally, we
        #   will not collect events with a block time exceeding 1 hour.
        # upgrade_from: static_config.ebpf.off-cpu-profile.minblock
        minblock: 50us
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: eBPF Packet Capture Rate Limit
      # unit: Per Second
      # range: [0, 64000000]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Default value 0 means no limitation.
      # upgrade_from: static_config.ebpf.global-ebpf-pps-threshold
      global_ebpf_pps_threshold: 0
      # type: int
      # name: Queue Size of eBPF Collector
      # unit:
      # range: [4096, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 0-ebpf-to-ebpf-collector
      #   - 1-proc-event-to-sender
      #   - 1-profile-to-sender
      # upgrade_from: static_config.ebpf-collector-queue-size
      ebpf_collector_queue_size: 65535
      # type: int
      # name: eBPF Worker Threads
      # unit:
      # range: [1, 1024]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The number of worker threads refers to how many threads participate
      #   in data processing in user-space. The actual maximal value is the number
      #   of CPU logical cores on the host.
      # upgrade_from: static_config.ebpf.thread-num
      thread_num: 1
      # type: int
      # name: eBPF Perf Pages Count
      # unit:
      # range: [32, 8192]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The number of page occupied by the shared memory of the kernel. The
      #   value is `2^n (5 <= n <= 13)`. Used for perf data transfer. If the
      #   value is between `2^n` and `2^(n+1)`, it will be automatically adjusted
      #   by the ebpf configurator to the minimum value `2^n`.
      # upgrade_from: static_config.ebpf.perf-pages-count
      perf_pages_count: 128
      # type: int
      # name: eBPF Dispatcher Ring Size
      # unit:
      # range: [8192, 131072]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The size of the ring cache queue, The value is `2^n (13 <= n <= 17)`.
      #   If the value is between `2^n` and `2^(n+1)`, it will be automatically
      #   adjusted by the ebpf configurator to the minimum value `2^n`.
      # upgrade_from: static_config.ebpf.ring-size
      ring_size: 65536
      # type: int
      # name: eBPF Max Socket Entries
      # unit:
      # range: [100000, 2000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Set the maximum value of hash table entries for socket tracking, depending
      #   on the number of concurrent requests in the actual scenario
      # upgrade_from: static_config.ebpf.max-socket-entries
      max_socket_entries: 131072
      # type: int
      # name: eBPF Socket Map Max Reclaim
      # unit:
      # range: [100000, 2000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The maximum threshold for cleaning socket map table entries.
      # upgrade_from: static_config.ebpf.socket-map-max-reclaim
      socket_map_max_reclaim: 120000
      # type: int
      # name: eBPF Max Trace Entries
      # unit:
      # range: [100000, 2000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Set the maximum value of hash table entries for thread/coroutine tracking sessions.
      # upgrade_from: static_config.ebpf.max-trace-entries
      max_trace_entries: 131072
    # type: section
    # name: Preprocess
    # description:
    preprocess:
      # type: int
      # name: OOOR (Out-Of-Order-Reassembly) Cache Size
      # unit:
      # range: [8, 1024]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   When `syscall-out-of-order-reassembly` is enabled, up to `syscall-out-of-order-cache-size`
      #   eBPF socket events (each event consuming up to `l7_log_packet_size` bytes) will be cached
      #   in each TCP/UDP flow to prevent out-of-order events from impacting application protocol
      #   parsing. Since eBPF socket events are sent to user space in batches, out-of-order scenarios
      #   mainly occur when requests and responses within a single session are processed by different
      #   CPUs, causing the response to reach user space before the request.
      # upgrade_from: static_config.ebpf.syscall-out-of-order-cache-size
      syscall_out_of_order_cache_size: 16
      # type: string
      # name: OOOR (Out-Of-Order-Reassembly) Enabled Protocols
      # unit:
      # range: []
      # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   When this capability is enabled for a specific application protocol, the agent will add
      #   out-of-order-reassembly processing for it. Note that the agent will consume more memory
      #   in this case, so please adjust the syscall-out-of-order-cache-size accordingly and monitor
      #   the agent's memory usage.
      #
      #   Supported protocols: https://www.deepflow.io/docs/features/l7-protocols/overview/
      #
      #   Attention: use `HTTP2` for `gRPC` Protocol.
      # upgrade_from: static_config.ebpf.syscall-out-of-order-reassembly
      syscall_out_of_order_reassembly: []
      # type: string
      # name: SR (Segmentation-Reassembly) Enabled Protocols
      # unit:
      # range: []
      # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   When this capability is enabled for a specific application protocol, the agent will add
      #   segmentation-reassembly processing to merge application protocol content spread across
      #   multiple syscalls before parsing it. This enhances the success rate of application
      #   protocol parsing. Note that `syscall-out-of-order-reassembly` must also be enabled for
      #   this feature to be effective.
      #
      #   Supported protocols: https://www.deepflow.io/docs/features/l7-protocols/overview/
      #
      #   Attention: use `HTTP2` for `gRPC` Protocol.
      # upgrade_from: static_config.ebpf.syscall-segmentation-reassembly
      syscall_segmentation_reassembly: []
  # type: section
  # name: Procs
  # description:
  procs:
    # type: bool
    # name: Enabled
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Only make sense when agent type is one of CHOST_VM, CHOST_BM, K8S_VM, K8S_BM.
    # upgrade_from: static_config.os-proc-sync-enabled
    os_proc_sync_enabled: false
    # type: bool
    # name: Sync Tagged Proc Only
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Only sync process with tag.
    # upgrade_from: static_config.os-proc-sync-tagged-only
    os_proc_sync_tagged_only: false
    # type: string
    # name: /proc FS Mount Path
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   The /proc fs mount path.
    # upgrade_from: static_config.os-proc-root
    os_proc_root: /proc
    # type: duration
    # name: Socket and Process Sync Interval
    # unit:
    # range: [1s, 1h]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   The interval of socket info sync.
    # upgrade_from: static_config.os-proc-socket-sync-interval
    # TODO: 从数字改为了 duration，增加了最小、最大值
    os_proc_socket_sync_interval: 10s
    # type: duration
    # name: Socket and Process Uptime Threshold
    # unit:
    # range: [1s, 1h]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Socket and Process uptime threshold
    # upgrade_from: static_config.os-proc-socket-min-lifetime
    # TODO: 从数字改为了 duration，增加了最小、最大值
    os_proc_socket_min_lifetime: 3s
    # type: string
    # name: Process Tag Extraction Command
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Execute the command every time when scan the process, expect get the process tag
    #   from stdout in yaml format, the example yaml format as follow:
    #   ```
    #   - pid: 1
    #     tags:
    #     - key: xxx
    #       value: xxx
    #   - pid: 2
    #     tags:
    #     - key: xxx
    #       value: xxx
    #   ```
    #   Example configuration: `os_app_tag_exec: ["cat", "/tmp/tag.yaml"]`
    # upgrade_from: static_config.os-app-tag-exec
    os_app_tag_exec: []
    # type: string
    # name: Username to Execute os_app_tag_exec
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   The user who should execute the `os-app-tag-exec` command.
    # upgrade_from: static_config.os-app-tag-exec-user
    os_app_tag_exec_user: deepflow
    # type: dict
    # name: Match Process and Rewrite Name
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Will traverse over the entire array, so the previous ones will be matched first.
    #   when match-type is parent_process_name, will recursive to match parent proc name, and rewrite-name field will ignore.
    #   rewrite-name can replace by regexp capture group and windows style environment variable, for example:
    #   `$1-py-script-%HOSTNAME%` will replace regexp capture group 1 and HOSTNAME env var.
    #   if proc not match any regexp will be accepted (essentially will auto append '- match-regex: .*' at the end).
    #
    #   Configuration Item:
    #   - match_regex: The regexp use for match the process, default value is `.*`
    #   - match_type: regexp match field, default value is `process_name`, options are
    #     [process_name, cmdline, parent_process_name]
    #   - action: Action when regex match, default value is `accept`, options are
    #     [accept, drop]
    #   - rewrite_name: The name will replace the process name or cmd use regexp replace.
    #     Default value "" means no replacement.
    #
    #   Example:
    #   ```
    #   os-proc-regex:
    #     - match-regex: python3 (.*)\.py
    #       match-type: cmdline
    #       action: accept
    #       rewrite-name: $1-py-script
    #     - match-regex: (?P<PROC_NAME>nginx)
    #       match-type: process_name
    #       rewrite-name: ${PROC_NAME}-%HOSTNAME%
    #     - match-regex: "nginx"
    #       match-type: parent_process_name
    #       action: accept
    #     - match-regex: .*sleep.*
    #       match-type: process_name
    #       action: drop
    #     - match-regex: .+ # match after concatenating a tag key and value pair using colon, i.e., an regex `app:.+` can match all processes has a `app` tag
    #       match-type: tag
    #       action: accept
    #   ```
    # upgrade_from: static_config.os-proc-regex
    # TODO: 注意内层的 key 有修改，- 改为 _
    os_proc_regex:
    - match_regex:
      match_type:
      action:
      rewrite_name:
  # type: section
  # name: Tags
  # description:
  tags:
    # type: duration
    # name: Platform Sync Interval
    # unit:
    # range: [10s, 3600s]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   The interval at which deepflow-agent actively reports resource information
    #   to deepflow-server.
    # upgrade_from: platform_sync_interval
    # TODO: 原来的单位是 s、类型是 int，新版本要改成 duration
    platform_sync_interval: 10s
    # type: section
    # name: Cloud
    cloud:
      # type: bool
      # name: KVM/Host Metadata Collection
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When enabled, deepflow-agent will automatically synchronize virtual
      #   machine and network information on the KVM (or Host) to deepflow-server.
      # upgrade_from: platform_enabled
      # TODO: 原来是 int，需要改为 bool
      platform_enabled: false
      # type: int
      # name: VM MAC Address Extraction
      # unit:
      # range: []
      # enum_options:
      #   - 0: Interface MAC Address
      #   - 1: Interface Name
      #   - 2: Qemu XML File
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   How to extract the real MAC address of the virtual machine when the
      #   agent runs on the KVM host.
      #
      #   Explanation of the options:
      #   - 0: extracted from tap interface MAC address
      #   - 1: extracted from tap interface name
      #   - 2: extracted from the XML file of the virtual machine
      # upgrade_from: if_mac_source
      if_mac_source: 0
      # type: string
      # name: VM XML File Directory
      # unit:
      # range: [0, 100]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   VM XML file directory.
      # upgrade_from: vm_xml_path
      vm_xml_path: /etc/libvirt/qemu/
      # type: string
      # name: TAP MAC Mapping Script
      # unit:
      # range: [0, 100]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The MAC address mapping relationship of TAP NIC in complex environment can be
      #   constructed by writing a script. The following conditions must be met to use this
      #   script:
      #   1. if_mac_source = 2
      #   2. tap_mode = 0
      #   3. The name of the TAP NIC is the same as in the virtual machine XML file
      #   4. The format of the script output is as follows:
      #      - tap2d283dfe,11:22:33:44:55:66
      #      - tap2d283223,aa:bb:cc:dd:ee:ff
      # upgrade_from: static_config.tap-mac-script
      # TODO: 增加了最小、最大长度
      tap_mac_script: ""
    # type: section
    # name: Kubernetes
    kubernetes:
      # type: string
      # name: K8s Namespace
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Used when deepflow-agent has only one k8s namespace query permission.
      # upgrade_from: static_config.kubernetes-namespace
      kubernetes_namespace:
      # type: dict
      # name: K8s api resources
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Specify kubernetes resources to watch.
      #
      #   The schematics of entries in list is:
      #   ```
      #   name: string
      #   group: string
      #   version: string
      #   disabled: bool (default false)
      #   field-selector: string
      #   ```
      #
      #   To disable a resource, add an entry to the list with `disabled: true`:
      #   ```
      #   kubernetes-resources:
      #   - name: services
      #     disabled: true
      #   ```
      #
      #   To enable a resource, add an entry of this resource to the list. Be advised that
      #   this setting overrides the default of the same resource. For example, to enable
      #   `statefulsets` in both group `apps` (the default) and `apps.kruise.io` will require
      #   two entries:
      #   ```
      #   kubernetes-resources:
      #   - name: statefulsets
      #     group: apps
      #   - name: statefulsets
      #     group: apps.kruise.io
      #     version: v1beta1
      #   ```
      #
      #   To watching `routes` in openshift you can use the following settings:
      #   ```
      #   kubernetes-resources:
      #   - name: ingresses
      #     disabled: true
      #   - name: routes
      #   ```
      # upgrade_from: static_config.kubernetes-resources
      # TODO: dict 类型的字段升级时要注意
      kubernetes_resources:
      - name: namespaces
      - name: nodes
      - name: pods
      - name: replicationcontrollers
      - name: services
      - name: daemonsets
      - name: deployments
      - name: replicasets
      - name: statefulsets
      - name: ingresses
      # type: int
      # name: K8s api list limit
      # unit:
      # range: [10, 4294967295]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Used when limit k8s api list entry size.
      # upgrade_from: static_config.kubernetes-api-list-limit
      kubernetes_api_list_limit: 1000
      # type: duration
      # name: K8s api list interval
      # unit:
      # range: [10m, 30d]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Interval of listing resource when watcher idles
      # upgrade_from: static_config.kubernetes-api-list-interval
      # TODO: 以前没有最大值限制，我加上了 30d
      kubernetes_api_list_interval: 10m
      # type: string
      # name: Ingress Flavour
      # upgrade_from: static_config.ingress-flavour
      # deprecated: true
      # TODO: 这个字段废弃了，应该可以直接删除了？
      ingress_flavour: kubernetes
      # type: string
      # name: Pod MAC/IP Address Query Method
      # unit:
      # range: []
      # enum_options: [adaptive, active, passive]
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   In active mode, deepflow-agent enters the netns of other Pods through
      #   setns syscall to query the MAC and IP addresses. In this mode, the setns
      #   operation requires the SYS_ADMIN permission. In passive mode deepflow-agent
      #   calculates the MAC and IP addresses used by Pods by capturing ARP/ND traffic.
      #   When set to adaptive, active mode will be used first.
      # upgrade_from: static_config.kubernetes-poller-type
      kubernetes_poller_type: adaptive
  # type: section
  # name: Integration
  # description:
  integration:
    # type: bool
    # name: Enabled
    # unit:
    # range: []
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   Whether to enable receiving external data sources such as Prometheus,
    #   Telegraf, OpenTelemetry, and SkyWalking.
    # upgrade_from: external_agent_http_proxy_enabled
    # TODO: 原来是 int，需要改为 bool
    external_agent_http_proxy_enabled: true
    # type: int
    # name: Listen Port
    # unit:
    # range: [1, 65535]
    # enum_options: []
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   Listen port of the data integration socket.
    # upgrade_from: external_agent_http_proxy_port
    external_agent_http_proxy_port: 38086
    # type: bool
    # name: Integration Data Compression
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   Whether to compress the integrated data received by deepflow-agent. Currently,
    #   only opentelemetry data is supported, and the compression ratio is about 5:1~10:1.
    #   Turning on this feature will result in higher CPU consumption of deepflow-agent.
    # upgrade_from: static_config.external-agent-http-proxy-compressed
    external_agent_http_proxy_compressed: false
    # type: section
    # name: Prometheus Extra Labels
    # description: |-
    #   Support for getting extra labels from headers in http requests from RemoteWrite.
    prometheus_extra_config:
      # type: bool
      # name: Enabled
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Prometheus extra labels switch.
      # upgrade_from: static_config.prometheus-extra-config.enabled
      enabled: false
      # type: dict
      # name: Extra Labels
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Labels list. Labels in this list are sent. Label is a string
      #   matching the regular expression `[a-zA-Z_][a-zA-Z0-9_]*`
      # upgrade_from: static_config.prometheus-extra-config.labels
      # TODO: 这里如何配置？原来的例子应该不对，只有 key 没有 value
      labels: []
      # type: int
      # name: Key Size Limit
      # unit: byte
      # range: [1024, 1048576]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The size limit of the parsed key.
      # upgrade_from: static_config.prometheus-extra-config.labels-limit
      labels_limit: 1024
      # type: int
      # name: Value Size Limit
      # unit: byte
      # range: [4096, 4194304]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The size limit of the parsed value.
      # upgrade_from: static_config.prometheus-extra-config.values-limit
      values_limit: 4096
    # type: section
    # name: Feature Control
    # description:
    feature_control:
      # type: bool
      # name: Profile Integration
      # description:
      # upgrade_from: static_config.external-profile-integration-disabled
      external_profile_integration_disabled: false
      # type: bool
      # name: Trace Integration
      # description:
      # upgrade_from: static_config.external-trace-integration-disabled
      external_trace_integration_disabled: false
      # type: bool
      # name: Metric Integration
      # description:
      # upgrade_from: static_config.external-metric-integration-disabled
      external_metric_integration_disabled: false
      # type: bool
      # name: Log Integration
      # description:
      # upgrade_from: static_config.external-log-integration-disabled
      external_log_integration_disabled: false

# type: section
# name: Precessors
# description:
processors:
  # type: section
  # name: Packet
  # description:
  packet:
    # type: section
    # name: Policy
    # description:
    policy:
      # type: int
      # name: Fast Path Map Size
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When set to 0, deepflow-agent will automatically adjust the map size
      #   according to max_memory.
      # upgrade_from: static_config.fast-path-map-size
      # TODO: 需要确认允许的范围
      fast_path_map_size: 0
      # type: bool
      # name: Fast Path Disabled
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When set to true, deepflow-agent will not use fast path.
      # upgrade_from: static_config.fast-path-disabled
      fast_path_disabled: false
      # type: int
      # name: Forward Table Capacity
      # unit:
      # range: [16384, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When this value is larger, the more memory usage may be.
      # upgrade_from: static_config.forward-capacity
      # TODO: 需要确定最大值能配多少
      forward_capacity: 16384
      # type: int
      # name: Fast Path Level
      # unit:
      # range: [1, 16]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   When this value is larger, the memory overhead is smaller, but the
      #   performance of policy matching is worse.
      # upgrade_from: static_config.first-path-level
      first_path_level: 8
    # type: section
    # name: TCP Header
    # description:
    tcp_header:
      # type: int
      # name: Block Size
      # unit:
      # range: [16, 8192]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   When generating TCP header data, each flow uses one block to compress and
      #   store multiple TCP headers, and the block size can be set here.
      # upgrade_from: static_config.packet-sequence-block-size
      # TODO: 增加了最小、最大值
      packet_sequence_block_size: 256
      # type: int
      # name: Output Queue Size
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   The length of the following queues (to UniformCollectSender):
      #   - 1-packet-sequence-block-to-uniform-collect-sender
      # upgrade_from: static_config.packet-sequence-queue-size
      # TODO: 增加了最大值
      packet_sequence_queue_size: 65536
      # type: int
      # name: Output Queue Count
      # unit:
      # range: [1, 64]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   The number of replicas for each output queue of the PacketSequence.
      # upgrade_from: static_config.packet-sequence-queue-count
      # TODO: 增加了最大值
      packet_sequence_queue_count: 1
      # type: int
      # name: Header Fields
      # unit:
      # range: [0, 255]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   packet-sequence-flag determines which fields need to be reported, the default
      #   value is 0, which means the feature is disabled, and 255, which means all fields
      #   need to be reported all fields corresponding to each bit:
      #   ```
      #   | FLAG | SEQ | ACK | PAYLOAD_SIZE | WINDOW_SIZE | OPT_MSS | OPT_WS | OPT_SACK |
      #   8      7     6     5              4             3         2        1          0
      #   ```
      # upgrade_from: static_config.packet-sequence-flag
      packet_sequence_flag: 0
    # type: section
    # name: PCAP
    # description:
    pcap:
      # type: int
      # name: Queue Size to PCAP Generator
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   The length of the following queues:
      #   - 1-mini-meta-packet-to-pcap
      # upgrade_from: static_config.pcap.queue-size
      # TODO: 增加了最大值
      queue_size: 65536
      # type: int
      # name: Buffer Size for Each Flow
      # unit:
      # range: [64, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Buffer flushes when one of the flows reach this limit.
      # upgrade_from: static_config.pcap.flow-buffer-size
      # TODO: 增加了最小、最大值
      flow_buffer_size: 65536
      # type: int
      # name: Total Buffer Size
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Buffer flushes when total data size reach this limit,
      #   cannot exceed sender buffer size 128K.
      # upgrade_from: static_config.pcap.buffer-size
      # TODO: 增加了最小、最大值。注意这里最大值还要梳理一下，是否只能 128K
      buffer_size: 88304
      # type: duration
      # name: Flow Flush Interval
      # unit:
      # range: [1s, 10m]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: true
      # description: |-
      #   Flushes a flow if its first packet were older then this interval.
      # upgrade_from: static_config.pcap.flush-interval
      # TODO: 增加了最小、最大值。
      flush_interval: 1m
    # type: section
    # name: TOA (TCP Option Address)
    # description:
    toa:
      # type: int
      # name: Queue Size of TOA Sync
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   FIXME
      # upgrade_from: static_config.toa-sender-queue-size
      # TODO: 以前最小值写的 1，是笔误吗？另外加上了最大值限制。以及以前的描述信息不对，需要重写。
      toa_sender_queue_size: 65536
      # type: int
      # name: TOA Cache Size
      # unit:
      # range: [1, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Size of tcp option address info cache size.
      # upgrade_from: static_config.toa-lru-cache-size
      # TODO: 增加了最大值限制
      toa_lru_cache_size: 65536
  # type: section
  # name: Request Log
  # description:
  request_log:
    # type: section
    # name: Application Protocol Inference
    # description:
    inference:
      # type: int
      # name: Maximum Fail Count
      # unit:
      # range: [0, 10000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   deepflow-agent will mark the long live stream and application protocol for each
      #   <vpc, ip, protocol, port> tuple, when the traffic corresponding to a tuple fails
      #   to be identified for many times (for multiple packets, Socket Data, Function Data),
      #   the tuple will be marked as an unknown type to avoid deepflow-agent continuing to
      #   try (incurring significant computational overhead) until the duration exceeds
      #   l7-protocol-inference-ttl.
      # upgrade_from: static_config.l7-protocol-inference-max-fail-count
      # TODO: 增加了最小、最大值
      l7_protocol_inference_max_fail_count: 5
      # type: duration
      # name: TTL of Inference Result
      # unit:
      # range: [0, 1d]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   deepflow-agent will mark the application protocol for each
      #   <vpc, ip, protocol, port> tuple. In order to avoid misidentification caused by IP
      #   changes, the validity period after successfully identifying the protocol will be
      #   limited to this value.
      # upgrade_from: static_config.l7-protocol-inference-ttl
      # TODO: 增加了最小、最大值
      l7_protocol_inference_ttl: 60
      # type: string
      # name: Enabled Application Protocols
      # unit:
      # range: []
      # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Turning off some protocol identification can reduce deepflow-agent resource consumption.
      #
      #   Supported protocols: https://www.deepflow.io/docs/features/l7-protocols/overview/
      #
      #   <mark>Oracle and TLS is only supported in the Enterprise Edition.</mark>
      # upgrade_from: static_config.l7-protocol-enabled
      # TODO: 确认一下 SofaRPC 的拼写
      l7_protocol_enabled:
        - HTTP
        - HTTP2
        - Dubbo
        - SofaRPC
        - FastCGI
        - bRPC
        - MySQL
        - PostgreSQL
        - Oracle
        - Redis
        - MongoDB
        - Kafka
        - MQTT
        - AMQP
        - OpenWire
        - NATS
        - Pulsar
        - ZMTP
        - DNS
        - TLS
        - Custom
      # type: dict
      # name: Allowed Port Numbers
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Port-list example: 80,1000-2000
      #
      #   HTTP2 and TLS are only used for kprobe, not applicable to uprobe.
      #   All data obtained through uprobe is not subject to port restrictions.
      #
      #   Supported protocols: https://www.deepflow.io/docs/features/l7-protocols/overview/
      #
      #   <mark>Oracle and TLS is only supported in the Enterprise Edition.</mark>
      #
      #   Attention: use `HTTP2` for `gRPC` Protocol.
      # upgrade_from: static_config.l7-protocol-ports
      # TODO: 格式改成和 l7-log-blacklist 一样，不用 dict 了，这样 key 更明确，且默认值的行为更明确。
      # TODO: 确认一下 SofaRPC 的拼写
      # TODO: 注意这个配置项有下一级配置，但它不是 section 类型的
      l7_protocol_ports:
        HTTP: 1-65535
        HTTP2: 1-65535
        Dubbo: 1-65535
        SofaRPC: 1-65535
        FastCGI: 1-65535
        bRPC: 1-65535
        MySQL: 1-65535
        PostgreSQL: 1-65535
        Oracle: 1521
        Redis: 1-65535
        MongoDB: 1-65535
        Kafka: 1-65535
        MQTT: 1-65535
        AMQP: 1-65535
        OpenWire: 1-65535
        NATS: 1-65535
        Pulsar: 1-65535
        ZMTP: 1-65535
        DNS: 53,5353
        TLS: 443,6443
        Custom: 1-65535 # plugins
      # type: section
      # name: Oracle Wire Protocol
      # description:
      oracle_protocol_configs:
        # type: bool
        # name: Integer Byte Order
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Whether the oracle integer encode is big endian.
        # upgrade_from: static_config.oracle-parse-config.is-be
        is_be: true
        # type: bool
        # name: Integer Compressed
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Whether the oracle integer encode is compress.
        # upgrade_from: static_config.oracle-parse-config.int-compress
        int_compress: true
        # type: bool
        # name: Response with ID 0x04
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Due to the response with data id 0x04 has different struct in
        #   different version, it may has one byte before row affect.
        # upgrade_from: static_config.oracle-parse-config.resp-0x04-extra-byte
        resp_0x04_extra_byte: false
    # type: section
    # name: Filters
    # description:
    filters:
      # type: dict
      # name: Blacklist
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Blacklist example:
      #   ```
      #   HTTP:
      #   - field-name: request_resource  # endpoint, request_type, request_domain, request_resource
      #     operator: equal               # equal, prefix
      #     value: somevalue
      #   ```
      #   A l7_flow_log blacklist can be configured for each protocol, preventing request logs matching
      #   the blacklist from being collected by the agent or included in application performance metrics.
      #   It's recommended to only place non-business request logs like heartbeats or health checks in this
      #   blacklist. Including business request logs might lead to breaks in the distributed tracing tree.
      #
      #   Supported protocols: https://www.deepflow.io/docs/features/l7-protocols/overview/
      #
      #   <mark>Oracle and TLS is only supported in the Enterprise Edition.</mark>
      #
      # upgrade_from: static_config.l7-log-blacklist
      # TODO: gRPC 要和 HTTP2 合并吗？需要增加 Custom 协议。
      # TODO: 确认一下 SofaRPC 的拼写
      l7_log_blacklist:
        HTTP: []
        HTTP2: []
        Dubbo: []
        gRPC: []
        SOFARPC: []
        FastCGI: []
        bRPC: []
        MySQL: []
        PostgreSQL: []
        Oracle: []
        Redis: []
        MongoDB: []
        Kafka: []
        MQTT: []
        AMQP: []
        OpenWire: []
        NATS: []
        Pulsar: []
        ZMTP: []
        DNS: []
        TLS: []
      # type: string
      # name: Unconcerned DNS NXDOMAIN Responses
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   You might not be concerned about certain DNS NXDOMAIN errors and may wish to ignore
      #   them. For example, when a K8s Pod tries to resolve an external domain name, it first
      #   concatenates it with the internal domain suffix of the cluster and attempts to resolve
      #   it. All these attempts will receive an NXDOMAIN reply before it finally requests the
      #   original domain name directly, and these errors may not be of concern to you. In such
      #   cases, you can configure their `response_result` suffix here, so that the corresponding
      #   `response_status` in the l7_flow_log is forcibly set to `Success`.
      # upgrade_from: static_config.l7-protocol-advanced-features.unconcerned-dns-nxdomain-response-suffixes
      unconcerned_dns_nxdomain_response_suffixes: []
    # type: section
    # name: Timeouts
    # description:
    timeouts:
      # type: duration
      # name: Maximal Duration - TCP
      # unit:
      # range: [10s, 3600s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The timeout of l7 log info rrt calculate, when rrt exceed the value will act as timeout and will not
      #   calculate the sum and average and will not merge the request and response in session aggregate. the value
      #   must greater than session aggregate SLOT_TIME (const 10s) and less than 3600 on tcp.
      # upgrade_from: static_config.rrt-tcp-timeout
      rrt_tcp_timeout: 1800s
      # type: duration
      # name: Maximal Duration - UDP
      # unit:
      # range: [10s, 300s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The timeout of l7 log info rrt calculate, when rrt exceed the value will act as timeout and will not
      #   calculate the sum and average and will not merge the request and response in session aggregate. the value
      #   must greater than session aggregate SLOT_TIME (const 10s) and less than 300 on udp.
      # upgrade_from: static_config.rrt-udp-timeout
      rrt_udp_timeout: 150s
      # type: duration
      # name: Aggregate Window
      # unit:
      # range: [20s, 300s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   l7_flow_log aggregate window.
      # upgrade_from: static_config.l7-log-session-aggr-timeout
      l7_log_session_aggr_timeout: 120s
    # type: section
    # name: Tags
    # description:
    tags:
      # type: section
      # name: Tracing
      # description:
      tracing:
        # type: string
        # name: HTTP Real Client
        # unit:
        # range: []
        # enum_options: []
        # modification: hot_update
        # ee_feature: false
        # description: |-
        #   It is used to extract the real client IP field in the HTTP header,
        #   such as X-Forwarded-For, etc. Leave it empty to disable this feature.
        # upgrade_from: http_log_proxy_client
        # TODO: 支持数组吗？应该要支持。
        http_log_proxy_client: X_Forwarded_For
        # type: string
        # name: HTTP X-Request-ID
        # unit:
        # range: []
        # enum_options: []
        # modification: hot_update
        # ee_feature: false
        # description: |-
        #   It is used to extract the fields in the HTTP header that are used
        #   to uniquely identify the same request before and after the gateway,
        #   such as X-Request-ID, etc. This feature can be turned off by setting
        #   it to empty.
        # upgrade_from: http_log_x_request_id
        # TODO: 支持数组吗？应该要支持。
        http_log_x_request_id: X_Request_ID
        # type: string
        # name: APM TraceID
        # unit:
        # range: []
        # enum_options: []
        # modification: hot_update
        # ee_feature: false
        # description: |-
        #   Used to extract the TraceID field in HTTP and RPC headers, supports filling
        #   in multiple values separated by commas. This feature can be turned off by
        #   setting it to empty.
        # upgrade_from: http_log_trace_id
        # TODO: 以前是一个字符串，支持逗号分割填写多个值，现在变成一个数组
        http_log_trace_id: [traceparent, sw8]
        # type: string
        # name: APM SpanID
        # unit:
        # range: []
        # enum_options: []
        # modification: hot_update
        # ee_feature: false
        # description: |-
        #   Used to extract the SpanID field in HTTP and RPC headers, supports filling
        #   in multiple values separated by commas. This feature can be turned off by
        #   setting it to empty.
        # upgrade_from: http_log_span_id
        # TODO: 以前是一个字符串，支持逗号分割填写多个值，现在变成一个数组
        http_log_span_id: [traceparent, sw8]
      # type: section
      # name: HTTP Endpoint Extraction
      # description:
      http_endpoint_extraction:
        # type: bool
        # name: Disabled
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   HTTP endpoint extration is enabled by default.
        # upgrade_from: static_config.l7-protocol-advanced-features.http-endpoint-extraction.disabled
        disabled: false
        # type: dict
        # name: Match Rules
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Extract endpoint according to the following rules:
        #   - Find a longest prefix that can match according to the principle of
        #     "longest prefix matching"
        #   - Intercept the first few paragraphs in URL (the content between two
        #     / is regarded as one paragraph) as endpoint
        #
        #   By default, two segments are extracted from the URL. For example, the
        #   URL is /a/b/c?query=xxx", whose segment is 3, extracts "/a/b" as the
        #   endpoint.
        # upgrade_from: static_config.l7-protocol-advanced-features.http-endpoint-extraction.match-rules
        # TODO: 注意 keep_segments 的升级
        match_rules:
        - prefix: ""
          keep_segments: 2
      # type: dict
      # name: Extra Header Field Extraction
      # unit:
      # range: []
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Configuration to extract the customized header fields of HTTP, HTTP2, gRPC protocol etc.
      #
      #   Attention: use `HTTP2` for `gRPC` Protocol.
      # upgrade_from: static_config.l7-protocol-advanced-features.extra-log-fields
      # TODO: http 和 http2 的大小写调整了一下。
      extra_log_fields:
        HTTP: []
        HTTP2: []
    # type: section
    # name: Transform
    # description:
    transform:
      # type: string
      # name: Obfuscation
      # unit:
      # range: []
      # enum_options: [MySQL, PostgreSQL, HTTP, HTTP2, Redis]
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   For the sake of data security, the data of the protocol that needs
      #   to be desensitized is configured here and is not processed by default.
      # upgrade_from: static_config.l7-protocol-advanced-features.obfuscate-enabled-protocols
      obfuscate_enabled_protocols: [Redis]
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: Payload Truncation
      # unit: byte
      # range: [256, 65535]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The maximum data length used for application protocol identification,
      #   note that the effective value is less than or equal to the value of
      #   capture_packet_size.
      #
      #   NOTE: For eBPF data, the largest valid value is 16384.
      # upgrade_from: l7_log_packet_size
      l7_log_packet_size: 1024
      # type: int
      # name: Capacity of Aggregation Time Slot
      # unit:
      # range: [1024, 1000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   By default, unidirectional l7_flow_log is aggregated into bidirectional
      #   request_log (session) with a caching time window of 2 minutes. During this
      #   period, every 5 seconds is considered as a time slot (i.e., a LRU). This
      #   configuration is used to specify the maximum number of unidirectional l7_flow_log
      #   entries that can be cached in each time slot.
      #
      #   If the number of l7_flow_log entries cached in a time slot exceeds this
      #   configuration, 10% of the data in that time slot will be evicted based on the
      #   LRU strategy to reduce memory consumption. Note that the evicted data will not be
      #   discarded; instead, they will be sent to the deepflow-server as unidirectional
      #   request_log.
      #
      #   The following metrics can be used as reference data for adjusting this configuration:
      #   - Metric `deepflow_system.deepflow_agent_l7_session_aggr.cached-request-resource`
      #     Used to record the total memory occupied by the request_resource field of the
      #     unidirectional l7_flow_log cached in all time slots at the current moment, in bytes.
      #   - Metric `deepflow_system.deepflow_agent_l7_session_aggr.over-limit`
      #     Used to record the number of times eviction is triggered due to reaching the
      #     LRU capacity limit.
      # upgrade_from: static_config.l7-log-session-slot-capacity
      # TODO: 增加了最大值
      l7_log_session_slot_capacity: 1024
  # type: section
  # name: Flow Metrics
  # description:
  flow_metrics:
    # type: section
    # name: Time Window
    # description:
    time_window:
      # type: duration
      # name: Extra Tolerance for Raw FlowLog
      # unit:
      # range: [1s, 10s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Extra tolerance for QuadrupleGenerator receiving 1s-FlowLog.
      # upgrade_from: static_config.second-flow-extra-delay-second
      # TODO: 增加了最小、最大限制
      second_flow_extra_delay_second: 0s
      # type: duration
      # name: Maximum Tolerable Packet Delay
      # unit:
      # range: [1s, 10s]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Extra tolerance for QuadrupleGenerator receiving 1s-FlowLog.
      # upgrade_from: static_config.packet-delay
      packet_delay: 1s
    # type: section
    # name: Connection Tracking (a.k.a. Flow Map)
    # description:
    conntrack:
      # type: duration
      # name: Flush Interval of FlowMap Output Queue
      # unit:
      # range: [1s, 1m]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Flush interval of the queue connected to the collector.
      # upgrade_from: static_config.flow.flush-interval
      # TODO: 增加了最小、最大值
      flush_interval: 1s
      # type: section
      # name: Flow Key
      flow_key:
        # type: bool
        # name: Ignore MAC when Generate Flow
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   When the MAC addresses of the two-way traffic collected at the same
        #   location are asymmetrical, the traffic cannot be aggregated into a Flow.
        #   You can set this value at this time. Only valid for Cloud (not IDC) traffic.
        # upgrade_from: static_config.flow.ignore-tor-mac
        ignore_tor_mac: false
        # type: bool
        # name: Ignore L2End when Generate Flow
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   For Cloud traffic, only the MAC address corresponding to the side with
        #   L2End = true is matched when generating the flow. Set this value to true to
        #   force a double-sided MAC address match and only aggregate traffic with
        #   exactly equal MAC addresses.
        # upgrade_from: static_config.flow.ignore-l2-end
        ignore_l2_end: false
        # type: bool
        # name: Ignore VLAN when Generate Flow
        # unit:
        # range: []
        # enum_options: []
        # modification: agent_restart
        # ee_feature: true
        # description: |-
        #   When the VLAN of the two-way traffic collected at the same location
        #   are asymmetrical, the traffic cannot be aggregated into a Flow. You can
        #   set this value at this time. Only valid for IDC (not Cloud) traffic.
        # upgrade_from: static_config.flow.ignore-idc-vlan
        ignore_idc_vlan: false
      # type: section
      # name: Timeouts
      timeouts:
        # type: duration
        # name: Established
        # unit:
        # range: [1s, 1d]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Timeouts for TCP State Machine - Established.
        # upgrade_from: static_config.flow.established-timeout
        # TODO: 增加了最小、最大值。描述信息要修改
        established_timeout: 300s
        # type: duration
        # name: Closing Reset
        # unit:
        # range: [1s, 1d]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Timeouts for TCP State Machine - Closing Reset.
        # upgrade_from: static_config.flow.closing-rst-timeout
        # TODO: 增加了最小、最大值。描述信息要修改
        closing_rst_timeout: 35s
        # type: duration
        # name: Others
        # unit:
        # range: [1s, 1d]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Timeouts for TCP State Machine - Others.
        # upgrade_from: static_config.flow.others-timeout
        # TODO: 增加了最小、最大值。描述信息要修改
        others_timeout: 5s
        # type: duration
        # name: Opening Reset
        # unit:
        # range: [1s, 1d]
        # enum_options: []
        # modification: agent_restart
        # ee_feature: false
        # description: |-
        #   Timeouts for TCP State Machine - Opening Reset.
        # upgrade_from: static_config.flow.opening-rst-timeout
        # TODO: 增加了最小、最大值。描述信息要修改
        opening_rst_timeout: 1s
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: HashSlot Size of FlowMap
      # unit:
      # range: [1024, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Since FlowAggregator is the first step in all processing, this value
      #   is also widely used in other hash tables such as QuadrupleGenerator,
      #   Collector, etc.
      # upgrade_from: static_config.flow.flow-slots-size
      # TODO: 增加了最小、最大值
      flow_slots_size: 131072
      # type: int
      # name: Maximum Flow
      # unit:
      # range: [1024, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Maximum number of flows that can be stored in FlowMap, It will also affect the capacity of
      #   the RRT cache, Example: rrt-cache-capacity = flow-count-limit. When rrt-cache-capacity is
      #   not enough, it will be unable to calculate the rrt of l7.
      # upgrade_from: static_config.flow.flow-count-limit
      # TODO: 增加了最小、最大值
      flow_count_limit: 65535
      # type: int
      # name: Size of Memory Pool
      # unit:
      # range: [1024, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   This value is used to set max length of memory pool in FlowMap
      #   Memory pools are used for frequently create and destroy objects like
      #   FlowNode, FlowLog, etc.
      # upgrade_from: static_config.flow.memory-pool-size
      # TODO: 增加了最小、最大值
      memory_pool_size: 65536
      # type: int
      # name: Max Size of Batched Buffer
      # unit:
      # range: [1024, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   Only TaggedFlow allocation is affected at the moment.
      #   Structs will be allocated in batch to minimalize malloc calls.
      #   Total memory size of a batch will not exceed this limit.
      #   A number larger than 128K is not recommended because the default
      #   MMAP_THRESHOLD is 128K, allocating chunks larger than 128K will
      #   result in calling mmap and more page faults.
      # upgrade_from: static_config.batched-buffer-size-limit
      # TODO: 增加了最大值
      batched_buffer_size_limit: 131072
      # type: int
      # name: Queue Size of FlowAggregator
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 2-second-flow-to-minute-aggrer
      # upgrade_from: static_config.flow.flow-aggr-queue-size
      # TODO: 增加了最大值
      flow_aggr_queue_size: 65535
      # type: int
      # name: Queue Size of FlowGenerator Output
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 1-tagged-flow-to-quadruple-generator
      #   - 1-tagged-flow-to-app-protocol-logs
      #   - 0-{flow_type}-{port}-packet-to-tagged-flow (flow_type: sflow, netflow)
      # upgrade_from: static_config.flow-queue-size
      # TODO: 以前没有设最大值，现在加上了
      flow_queue_size: 65536
      # type: int
      # name: Queue Size of QuadrupleGenerator Output
      # unit:
      # range: [262144, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 2-flow-with-meter-to-second-collector
      #   - 2-flow-with-meter-to-minute-collector
      # upgrade_from: static_config.quadruple-queue-size
      # TODO: 以前没有设最大值，现在加上了
      quadruple_queue_size: 262144

# type: section
# name: Outputs
# description:
outputs:
  # type: section
  # name: Socket
  # description:
  socket:
    # type: string
    # name: Data Socket Type
    # unit:
    # range: []
    # enum_options: [TCP, UDP, FILE]
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   It can only be set to FILE in standalone mode, in which case
    #   l4_flow_log and l7_flow_log will be written to local files.
    # upgrade_from: collector_socket_type
    collector_socket_type: TCP
    # type: string
    # name: PCAP Socket Type
    # unit:
    # range: []
    # enum_options: [TCP, UDP, RAW_UDP]
    # modification: hot_update
    # ee_feature: false
    # description: |-
    #   RAW_UDP uses RawSocket to send UDP packets, which has the highest
    #   performance, but there may be compatibility issues in some environments.
    # upgrade_from: compressor_socket_type
    # TODO: 待确认，还用吗？
    compressor_socket_type: TCP
    # type: bool
    # name: RAW_UDP Sender Performance Optimization
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: false
    # description: |-
    #   When sender uses RAW_UDP to send data, this feature can be enabled to
    #   improve performance. Linux Kernel >= 3.14 is required. Note that the data
    #   sent when this feature is enabled cannot be captured by tcpdump.
    # upgrade_from: static_config.enable-qos-bypass
    enable_qos_bypass: false
  # type: section
  # name: Flow Log
  # description:
  flow_log:
    # type: section
    # name: Filters
    # description:
    filters:
      # type: int
      # name: Capture Network Types for l4_flow_log
      # unit:
      # range: []
      # enum_options:
      #   - -1: Disabled
      #   - 0: All TAPs
      #   - _DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The list of TAPs to collect l4_flow_log, you can also set a list of TAPs to
      #   be collected.
      # upgrade_from: l4_log_tap_types
      # TODO: 候选项需要特殊处理
      l4_log_tap_types: [0]
      # type: int
      # name: Capture Network Types for l7_flow_log
      # unit:
      # range: []
      # enum_options:
      #   - -1: Disabled
      #   - 0: All TAPs
      #   - _DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The list of TAPs to collect l7_flow_log, you can also set a list of TAPs to
      #   be collected.
      # upgrade_from: l7_log_store_tap_types
      # TODO: 候选项需要特殊处理
      l7_log_store_tap_types: []
      # type: int
      # name: Ignored Observation Point for l4_flow_log
      # unit:
      # range: []
      # enum_options:
      #   - 0: rest, Other NIC
      #   - 1: c, Client NIC
      #   - 2: s, Server NIC
      #   - 4: local, Local NIC
      #   - 9: c-nd, Client K8s Node
      #   - 10: s-nd, Server K8s Node
      #   - 17: c-hv, Client VM Hypervisor
      #   - 18: s-hv, Server VM Hypervisor
      #   - 25: c-gw-hv, Client-side Gateway Hypervisor
      #   - 26: s-gw-hv, Server-side Gateway Hypervisor
      #   - 33: c-gw, Client-side Gateway
      #   - 34: s-gw, Server-side Gateway
      #   - 41: c-p, Client Process
      #   - 42: s-p, Server Process
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Use the value of tap_side to control which l4_flow_log should be ignored for
      #   collection. This configuration also applies to tcp_sequence and pcap data in
      #   the Enterprise Edition. Default value [] means store everything.
      # upgrade_from: l4_log_ignore_tap_sides
      l4_log_ignore_tap_sides: []
      # type: int
      # name: Ignored Observation Point for l7_flow_log
      # unit:
      # range: []
      # enum_options:
      #   - 0: rest, Other NIC
      #   - 1: c, Client NIC
      #   - 2: s, Server NIC
      #   - 4: local, Local NIC
      #   - 9: c-nd, Client K8s Node
      #   - 10: s-nd, Server K8s Node
      #   - 17: c-hv, Client VM Hypervisor
      #   - 18: s-hv, Server VM Hypervisor
      #   - 25: c-gw-hv, Client-side Gateway Hypervisor
      #   - 26: s-gw-hv, Server-side Gateway Hypervisor
      #   - 33: c-gw, Client-side Gateway
      #   - 34: s-gw, Server-side Gateway
      #   - 41: c-p, Client Process
      #   - 42: s-p, Server Process
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Use the value of tap_side to control which l7_flow_log should be ignored for
      #   collection.
      # upgrade_from: l7_log_ignore_tap_sides
      l7_log_ignore_tap_sides: []
    # type: section
    # name: Throttle
    # description:
    throttle:
      # type: int
      # name: Maximum Sending Rate for l4_flow_log
      # unit: Per Second
      # range: [100, 1000000]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The maximum number of rows of l4_flow_log sent per second, when the actual
      #   number of rows exceeds this value, sampling is triggered.
      # upgrade_from: l4_log_collect_nps_threshold
      l4_log_collect_nps_threshold: 10000
      # type: int
      # name: Maximum Sending Rate for l7_flow_log
      # unit: Per Second
      # range: [100, 1000000]
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   The maximum number of rows of l7_flow_log sent per second, when the actual
      #   number of rows exceeds this value, sampling is triggered.
      # upgrade_from: l7_log_collect_nps_threshold
      l7_log_collect_nps_threshold: 10000
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: Queue Size of FlowAggregator/SessionAggregator Output
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 3-flow-to-collector-sender
      #   - 3-protolog-to-collector-sender
      # upgrade_from: static_config.flow-sender-queue-size
      # TODO: 增加了最大值限制
      flow_sender_queue_size: 65536
      # type: int
      # name: Queue Count of FlowAggregator/SessionAggregator Output
      # unit:
      # range: [1, 64]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The number of replicas for each output queue of the
      #   FlowAggregator/SessionAggregator.
      # upgrade_from: static_config.flow-sender-queue-count
      flow_sender_queue_count: 1
  # type: section
  # name: Flow Metrics
  # description:
  flow_metrics:
    # type: section
    # name: Filters
    # description:
    filters:
      # type: bool
      # name: AutoMetrics & AutoLogging
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When disabled, deepflow-agent will not send metrics and logging data
      #   collected using eBPF and cBPF.
      # upgrade_from: collector_enabled
      # TODO: 原来是 int，需要改为 bool
      collector_enabled: true
      # type: bool
      # name: Detailed Metrics for Inactive Port
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When closed, deepflow-agent will not generate detailed metrics for each
      #   inactive port (ports that only receive data, not send data), and the data of
      #   all inactive ports will be aggregated into the metrics with a tag
      #   'server_port = 0'.
      # upgrade_from: inactive_server_port_enabled
      # TODO: 原来是 int，需要改为 bool
      inactive_server_port_enabled: true
      # type: bool
      # name: Detailed Metrics for Inactive IP Address
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When closed, deepflow-agent will not generate detailed metrics for each
      #   inactive IP address (IP addresses that only receive data, not send data), and
      #   the data of all inactive IP addresses will be aggregated into the metrics with
      #   a tag 'ip = 0'.
      # upgrade_from: inactive_ip_enabled
      # TODO: 原来是 int，需要改为 bool
      inactive_ip_enabled: true
      # type: bool
      # name: NPM Metrics
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When closed, deepflow-agent only collects some basic throughput metrics.
      # upgrade_from: l4_performance_enabled
      # TODO: 原来是 int，需要改为 bool
      l4_performance_enabled: true
      # type: bool
      # name: APM Metrics
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   When closed, deepflow-agent will not collect RED (request/error/delay) metrics.
      # upgrade_from: l7_metrics_enabled
      # TODO: 原来是 int，需要改为 bool
      l7_metrics_enabled: true
      # type: bool
      # name: 1s Metrics
      # unit:
      # range: []
      # enum_options: []
      # modification: hot_update
      # ee_feature: false
      # description: |-
      #   Second granularity metrics.
      # upgrade_from: vtap_flow_1s_enabled
      # TODO: 原来是 int，需要改为 bool
      vtap_flow_1s_enabled: true
    # type: section
    # name: Tunning
    # description:
    tunning:
      # type: int
      # name: Queue Size of Collector Output
      # unit:
      # range: [65536, 64000000]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The length of the following queues:
      #   - 2-doc-to-collector-sender
      # upgrade_from: static_config.collector-sender-queue-size
      # TODO: 增加了最大值限制
      collector_sender_queue_size: 65536
      # type: int
      # name: Queue Count of Collector Output
      # unit:
      # range: [1, 64]
      # enum_options: []
      # modification: agent_restart
      # ee_feature: false
      # description: |-
      #   The number of replicas for each output queue of the collector.
      # upgrade_from: static_config.collector-sender-queue-count
      # TODO: 增加了最大值限制
      collector_sender_queue_count: 1
  # type: section
  # name: NPB (Network Packet Broker)
  # description:
  npb:
    # type: int
    # name: UDP maximum MTU
    # unit: byte
    # range: [500, 10000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   Maximum MTU allowed when using UDP to transfer data.
    #
    #   Attention: Public cloud service providers may modify the content of the
    #   tail of the UDP packet whose packet length is close to 1500 bytes. When
    #   using UDP transmission, it is recommended to set a slightly smaller value.
    # upgrade_from: mtu
    mtu: 1500
    # type: int
    # name: Raw UDP VLAN Tag
    # unit:
    # range: [0, 4095]
    # enum_options: []
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   When using Raw Socket to transmit UDP data, this value can be used to
    #   set the VLAN tag. Default value 0 means no VLAN tag.
    # upgrade_from: output_vlan
    output_vlan: 0
    # type: string
    # name: NPB Socket Type
    # unit:
    # range: []
    # enum_options: [UDP, RAW_UDP]
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   RAW_UDP uses RawSocket to send UDP packets, which has the highest
    #   performance, but there may be compatibility issues in some environments.
    # upgrade_from: npb_socket_type
    npb_socket_type: RAW_UDP
    # type: int
    # name: Inner Additional Header
    # unit:
    # range: []
    # enum_options:
    #   - 0: None
    #   - 1: 802.1Q
    #   - 2: QinQ
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   Whether to add an extra 802.1Q header to NPB traffic, when this value is
    #   set, deepflow-agent will insert a VLAN Tag into the NPB traffic header, and
    #   the value is the lower 12 bits of TunnelID in the VXLAN header.
    # upgrade_from: npb_vlan_mode
    npb_vlan_mode: 0
    # type: bool
    # name: Global Deduplication
    # unit:
    # range: []
    # enum_options: []
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   Whether to enable global (distributed) traffic deduplication for the
    #   NPB feature.
    # upgrade_from: npb_dedup_enabled
    # TODO: 原来是 int，需要改为 bool
    npb_dedup_enabled: true
    # type: int
    # name: Server Port for NPB
    # unit:
    # range: [1, 65535]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: true
    # description: |-
    #   Server port for NPB.
    # upgrade_from: static_config.npb-port
    npb_port: 4789
    # type: int
    # name: Reserve Flags for VXLAN
    # unit:
    # range: [0x00, 0xFF]
    # enum_options: []
    # modification: agent_restart
    # ee_feature: true
    # description: |-
    #   NPB uses the first byte of the VXLAN Flag to identify the sending traffic to
    #   prevent the traffic sent by NPB from being collected by deepflow-agent. To ensure
    #   that the VNI bit is set, the value configured here will be used after |= 0x8.
    # upgrade_from: static_config.vxlan-flags
    # TODO: 写入十六进制数能正常读取吗？这个值域要刨除 0x08，需要注意处理。
    vxlan_flags: 0xFF
    # type: bool
    # name: Ignoring VLAN Header in Overlay
    # unit:
    # range: []
    # enum_options: []
    # modification: agent_restart
    # ee_feature: true
    # description: |-
    #   This configuration only ignores the VLAN header in the captured original message
    #   and does not affect the configuration item: npb_vlan_mode
    # upgrade_from: static_config.ignore-overlay-vlan
    ignore_overlay_vlan: false
    # type: int
    # name: Tx Traffic Limit
    # unit: Mbps
    # range: [1, 100000]
    # enum_options: []
    # modification: hot_update
    # ee_feature: true
    # description: |-
    #   Maximum traffic rate allowed for npb sender.
    # upgrade_from: max_npb_bps
    max_npb_bps: 1000

# type: section
# name: Plugins
# description:
plugins:
  # type: string
  # name: Wasm Plugins
  # unit:
  # range: []
  # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
  # modification: hot_update
  # ee_feature: false
  # description: |-
  #   Wasm plugin need to load in agent
  # upgrade_from: wasm_plugins
  # TODO: 候选项需要特殊处理
  wasm_plugins: []
  # type: string
  # name: .so Plugins
  # unit:
  # range: []
  # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
  # modification: hot_update
  # ee_feature: false
  # description: |-
  #   so plugin need to load in agent. so plugin use dlopen flag RTLD_LOCAL
  #   and RTLD_LAZY to open the so file, it mean that the so must solve the
  #   link problem by itself
  # upgrade_from: so_plugins
  # TODO: 候选项需要特殊处理
  so_plugins: []

# type: section
# name: Server Side
# description:
server_side:
  # type: bool
  # name: Request NAT IP
  # unit:
  # range: []
  # enum_options: []
  # modification: hot_update
  # ee_feature: false
  # description: |-
  #   Used when deepflow-agent uses an external IP address to access
  #   deepflow-server. For example, when deepflow-server is behind a NAT gateway,
  #   or the host where deepflow-server is located has multiple node IP addresses
  #   and different deepflow-agents need to access different node IPs, you can
  #   set an additional NAT IP for each deepflow-server address, and modify this
  #   value to true.
  # upgrade_from: nat_ip_enabled
  # TODO: 原来是 int，需要改为 bool
  nat_ip_enabled: false
  # type: int
  # name: Resource MAC/IP Address Delivery
  # unit:
  # range: []
  # enum_options: [_DYNAMIC_OPTIONS_: _DYNAMIC_OPTIONS_]
  # modification: hot_update
  # ee_feature: false
  # description: |-
  #   Default value 0 means all domains, or can be set to a list of lcuuid of a
  #   series of domains, you can get lcuuid through 'deepflow-ctl domain list'.
  #
  #   Note: The list of MAC and IP addresses is used by deepflow-agent to inject tags
  #   into data. This configuration can reduce the number and frequency of MAC and
  #   IP addresses delivered by deepflow-server to deepflow-agent. When there is no
  #   cross-domain service request, deepflow-server can be configured to only deliver
  #   the information in the local domain to deepflow-agent.
  # upgrade_from: domains
  # TODO: 特殊字段，候选项需要通过自己的 API 获取。这个字段是 int 还是 string？默认值为空数组更合理？
  domains: [0]
  # type: int
  # name: Pod MAC/IP Address Delivery
  # unit:
  # range: []
  # enum_options:
  #   - 0: All K8s Cluster
  #   - 1: Local K8s Cluster
  # modification: hot_update
  # ee_feature: false
  # description: |-
  #   The list of MAC and IP addresses is used by deepflow-agent to inject tags
  #   into data. This configuration can reduce the number and frequency of MAC and IP
  #   addresses delivered by deepflow-server to deepflow-agent. When the Pod IP is not
  #   used for direct communication between the K8s cluster and the outside world,
  #   deepflow-server can be configured to only deliver the information in the local
  #   K8s cluster to deepflow-agent.
  # upgrade_from: pod_cluster_internal_ip
  pod_cluster_internal_ip: 0

# type: section
# name: Dev
dev:
  # type: string
  # name: Feature Flags
  # unit:
  # range: []
  # enum_options: []
  # modification: agent_restart
  # ee_feature: false
  # description: |-
  #    Unreleased deepflow-agent features can be turned on by setting this switch.
  # upgrade_from: static_config.feature-flags
  feature_flags: []
